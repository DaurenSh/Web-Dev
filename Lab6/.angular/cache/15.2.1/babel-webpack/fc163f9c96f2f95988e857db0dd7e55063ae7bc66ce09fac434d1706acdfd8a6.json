{"ast":null,"code":"import _defineProperty from \"C:/Users/001/Documents/GitHub/Web-Dev/Lab6/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\nexport class AboutComponent {\n  constructor() {}\n  ngOnInit() {}\n}\n_defineProperty(AboutComponent, \"\\u0275fac\", function AboutComponent_Factory(t) {\n  return new (t || AboutComponent)();\n});\n_defineProperty(AboutComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AboutComponent,\n  selectors: [[\"app-about\"]],\n  decls: 45,\n  vars: 0,\n  template: function AboutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"This is Laboratory Work #6\");\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵtext(3, \" In this laboratory work you have to try to use the Route and Http modules in your Angular project.\");\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵtext(5, \" URL: /home - static markup page\");\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵtext(7, \" URL: /about - static markup page\");\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵtext(9, \" You should have CRUD (create / read / update / delete) operations for albums.\");\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵtext(11, \" URL: /albums - a list of albums from this url. Each item should:\");\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵtext(13, \" have delete button with implementation\");\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵtext(15, \" be clickable, after selecting one of them, must be opened a detail page.\");\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵtext(17, \" URL: /albums/:id - detail page of selected item (example). This page should contain:\");\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵtext(19, \" information about selected item\");\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵtext(21, \" editable input for changing album title and \\u201CSave\\u201D button\");\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵtext(23, \" \\u201CReturn back\\u201D button\");\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵtext(25, \" \\u201CPhotos\\u201D link which will redirect to photos page of selected album\");\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵtext(27, \" URL: /albums/:id/photos - photos page of selected album (example). This page will render all images in any format and will have a \\u201CReturn back\\u201D button.\");\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵtext(29, \" Root url: \\u201C\\u201D, must be redirect to: /home\");\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵtext(31, \" Albums and photos must be fetched using HTTP module and must be passed to components through albums.service.ts and must be Observable\");\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵtext(33, \" Your components:\");\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵtext(35, \" Home Component\");\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵtext(37, \" About Component\");\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵtext(39, \" Albums Component\");\n      i0.ɵɵelement(40, \"br\");\n      i0.ɵɵtext(41, \" Album Detail Component\");\n      i0.ɵɵelement(42, \"br\");\n      i0.ɵɵtext(43, \" Album Photos Component\");\n      i0.ɵɵelement(44, \"br\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"p[_ngcontent-%COMP%] {\\r\\n  font-size: 18px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsicCB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n}));","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EACzBC,eAAe;EACfC,QAAQ,IAAU;;gBAFPF,cAAc;mBAAdA,cAAc;AAAA;AAAA,gBAAdA,cAAc;QAAdA,cAAc;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;MCP3BC,yBAAG;MAAAA,0CAA0B;MAAAA,qBAAI;MAC/BA,mHAAkG;MAAAA,qBAAI;MACtGA,gDAA+B;MAAAA,qBAAI;MACnCA,iDAAgC;MAAAA,qBAAI;MACpCA,8FAA6E;MAAAA,sBAAI;MACjFA,kFAAgE;MAAAA,sBAAI;MACpEA,wDAAsC;MAAAA,sBAAI;MAC1CA,0FAAwE;MAAAA,sBAAI;MAC5EA,sGAAoF;MAAAA,sBAAI;MACxFA,iDAA+B;MAAAA,sBAAI;MACnCA,qFAAyD;MAAAA,sBAAI;MAC7DA,gDAAoB;MAAAA,sBAAI;MACxBA,8FAAkE;MAAAA,sBAAI;MACtEA,mLACiC;MAAAA,sBAAI;MACrCA,oEAAwC;MAAAA,sBAAI;MAC5CA,uJACkB;MAAAA,sBAAI;MACtBA,kCAAgB;MAAAA,sBAAI;MACpBA,gCAAc;MAAAA,sBAAI;MAClBA,iCAAe;MAAAA,sBAAI;MACnBA,kCAAgB;MAAAA,sBAAI;MACpBA,wCAAsB;MAAAA,sBAAI;MAC1BA,wCAAsB;MAAAA,sBAAI;MAC5BA,iBAAI","names":["AboutComponent","constructor","ngOnInit","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\001\\Documents\\GitHub\\Web-Dev\\Lab6\\src\\app\\about\\about.component.ts","C:\\Users\\001\\Documents\\GitHub\\Web-Dev\\Lab6\\src\\app\\about\\about.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  constructor() {}\r\n  ngOnInit(): void {}\r\n}\r\n","<p>This is Laboratory Work #6<br>\r\n  In this laboratory work you have to try to use the Route and Http modules in your Angular project.<br>\r\n  URL: /home - static markup page<br>\r\n  URL: /about - static markup page<br>\r\n  You should have CRUD (create / read / update / delete) operations for albums.<br>\r\n  URL: /albums - a list of albums from this url. Each item should:<br>\r\n  have delete button with implementation<br>\r\n  be clickable, after selecting one of them, must be opened a detail page.<br>\r\n  URL: /albums/:id - detail page of selected item (example). This page should contain:<br>\r\n  information about selected item<br>\r\n  editable input for changing album title and “Save” button<br>\r\n  “Return back” button<br>\r\n  “Photos” link which will redirect to photos page of selected album<br>\r\n  URL: /albums/:id/photos - photos page of selected album (example). This page will render all images in any format and\r\n  will have a “Return back” button.<br>\r\n  Root url: “”, must be redirect to: /home<br>\r\n  Albums and photos must be fetched using HTTP module and must be passed to components through albums.service.ts and\r\n  must be Observable<br>\r\n  Your components:<br>\r\n  Home Component<br>\r\n  About Component<br>\r\n  Albums Component<br>\r\n  Album Detail Component<br>\r\n  Album Photos Component<br>\r\n</p>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}